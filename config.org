#+title: Doom Emacs Configuration
#+startup: nofold

Here are some additional functions/macros that could help you configure Doom:
- =load!= for loading external =*.el= files relative to this one
- =use-package= for configuring packages
- =after!= for running code after a package has loaded
- =add-load-path!= for adding directories to the =load-path=, relative to
  this file. Emacs searches the =load-path= when you load packages with
  =require= or =use-package=.
- =map!= for binding new keys

To get information about any of these functions/macros, move the cursor over
the highlighted symbol at press =K= (non-evil users must press =C-c g k=).
This will open documentation for it, including demos of how they are used.

You can also try =gd= (or =C-c g d=) to jump to their definition and see how
they are implemented.

* User info
Some functionality uses this to identify you, e.g. GPG configuration, email
clients, file templates and snippets.
#+BEGIN_SRC emacs-lisp
(setq user-full-name "Lucas F. Aguiar"
      user-mail-address "lucas.fernandes.df@gmail.com")
#+END_SRC
* Doom-font
Doom exposes five (optional) variables for controlling fonts in Doom. Here
are the three important ones:
- =doom-font=
- =doom-variable-pitch-font=
- =doom-big-font= -- used for =doom-big-font-mode=; use this for
  presentations or streaming.
They all accept either a font-spec, font string ("Input Mono-12"), or xlfd
font string. You generally only need these two:
#+BEGIN_SRC emacs-lisp
(setq doom-font (font-spec :family "Roboto Mono Light" :size 14))
#+END_SRC
* Doom-theme
There are two ways to load a theme. Both assume the theme is installed and
available. You can either set =doom-theme= or manually load a theme with the
=load-theme= function. This is the default:
#+BEGIN_SRC emacs-lisp
;; (setq doom-theme 'doom-solarized-light)
;; (setq doom-theme 'modus-operandi)
;; (setq doom-theme 'modus-operandi)
#+END_SRC

Setting a theme changer based on location. The package needs to be installed with =package-install= first.
#+BEGIN_SRC emacs-lisp
(setq calendar-location-name "Brasília, DF")
(setq calendar-latitude -15.77)
(setq calendar-longitude -47.92)
(require 'theme-changer)
(change-theme 'modus-operandi 'modus-vivendi)
(add-to-list 'load-path "~/.doom.d/theme-changer")
#+END_SRC
* Org-mode
#+BEGIN_SRC emacs-lisp
(setenv "BROWSER" "firefox")

(setq org-directory "~/org-roam")
(setq org-default-notes-file "~/org-roam/notes.org")

(use-package org-capture
  :config
  (setq org-capture-templates
        '(("t" "Novo TODO" entry (file+headline "~/org-roam/todo.org" "Inbox")
             "* %?\n %i" :prepend t)
          ("n" "Nova anotação" entry (file+headline "~/org-roam/notes.org" "Inbox")
             "* %?\n %i" :prepend t)
          ("p" "Novo projeto" entry (file+headline "~/org-roam/projects.org" "Inbox")
             "* %?\n %i" :prepend t)
            )
          )
)
#+END_SRC

#+RESULTS:
| t | Novo TODO | entry | (file+headline ~/org-roam/todo.org Inbox) | * %? |

* Org-roam org-journal deft
If you use =org= and don't want your org files in the default location below,
change =org-directory=. It must be set before org loads!
#+BEGIN_SRC emacs-lisp
(use-package org-roam
  :hook (after-init . org-roam-mode)

  :config
  (setq org-roam-directory "~/org-roam")

  (map!
   "C-c n l" #'org-roam
   "C-c n t" #'org-roam-today
   "C-c n f" #'org-roam-find-file
   "C-c n i" #'org-roam-insert
   "C-c n g" #'org-roam-show-graph
   )
  )

(use-package org-journal
  :bind
  ("C-c n j" . org-journal-new-entry)
  :custom
  (org-journal-date-prefix "#+TITLE: ")
  (org-journal-file-format "%Y-%m-%d.org")
  (org-journal-dir "~/org-roam")
  (org-journal-date-format "%A, %d de %B de %Y"))

(use-package deft
  :after org
  :bind
  ("C-c n d" . deft)
  :custom
  (deft-recursive t)
  (deft-use-filter-string-for-filename t)
  (deft-default-extension "org")
  (deft-directory "~/org-roam"))
#+END_SRC
* Line numbers
This determines the style of line numbers in effect. If set to =nil=, line
numbers are disabled. For relative line numbers, set this to =relative=.
#+BEGIN_SRC emacs-lisp
(setq display-line-numbers-type relative)
#+END_SRC
* Centaur tabs
#+BEGIN_SRC emacs-lisp
(setq centaur-tabs-style "bar")
#+END_SRC
* Window size
#+BEGIN_SRC emacs-lisp
(modify-all-frames-parameters '((fullscreen . maximized)))
#+END_SRC
* Telega
#+BEGIN_SRC emacs-lisp
(use-package telega
  :load-path  "~/telega.el"
  :commands (telega)
  :defer t)
#+END_SRC
